Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Variable.UDT.uQuoteChange.Define("SEQ",String)
Variable.UDT.uQuoteChange.Define("CHANGE",String)
Variable.UDT.uQuoteChange.Define("BEFORE",String)
Variable.UDT.uQuoteChange.Define("AFTER",String)
Variable.uGlobal.uQuoteChange.Declare("uQuoteChange")
Program.Sub.Preflight.End

Program.Sub.Main.Start
'This GAB script tracks changes made to a quote. The changes are stored into a new table called INA_QUOTE_REV.
'Tracking the following line items: part number, quantity, price, discount percent, apply discount, ship-to-ID
'Tracking the following header items: terms, discount percent, apply discount to all line items

'How the script works:
'- When opening a quote, a reference row will be created (a quote and a rev with seq 00)
'- Any line addition, deletion, and modification will be stored using pre-save hook and/or pre-delete hook on QTE201L
'- Any header information changes will be stored using pre-save hook on QTE200
'- When exiting the open quote screen, the script checks if there are any reference rows which have no changes

'Created by: Maximilian Hertanto (17 May 2015)
'Updated:
'- 18 May 2015: Adding a new hook (10710) to change the label in Script 1 button
'- 18 May 2015: Adding part changes tracking in addModifyLine
'- 18 May 2015: deleteReference has been modified to allow deletion of all quote reference rows which have no changes made
'- 20 May 2015: Add a zero before decimal separators on discount percent
'- 24 May 2015: In addReference when the rev is greater than 01, the previous rev seq is changed to ZZ. Previosly the previous rev was deleted
'- 24 May 2015: In deleteReference the deletion is modified to be based on seq ZZ and USERID. Also add the deletion of an empty rev 01
'- 24 May 2015: In addReference, a check point is created to detect if the selected rev is opened by another user
'- 24 May 2015: In addReference, quote rev that is currently opened by a user has an extra ZZ seq
'- 24 May 2015: Part number is shown in adding or deleting a line
'- 14 June 2015: Add a new subroutine called deleteZZ, it is placed on entry hook to clear out any ZZ sequences generated by the user from previous opening of quote screen
'- 28 Jan 2016: Major rewrite on the code, more emphasis on simplifications
'- 28 Jan 2016: Able to track changes of due dates in quote header and item promised date in quote line
'- 15 Nov 2020: ZZ record not deleted when click Save in Quote Header and choose Yes to clear screen. (TDjohan)

V.Local.bExist.Declare
V.Local.sFieldList.Declare
V.Local.sQuote.Declare

F.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

'Only for open quote
F.Intrinsic.Control.If(V.Caller.Switches,=,"O")
	'Quote entry hook
	F.Intrinsic.Control.If(V.Caller.Hook,=,10700)
		F.ODBC.Connection!conx.TableExists("INA_QUOTE_REV",V.Local.bExist)
		F.Intrinsic.Control.If(V.Local.bExist,=,False)
			F.Intrinsic.UI.InvokeWaitDialog("Creating custom table to store quote changes","Quote Revision [APAC]")
			F.ODBC.Connection!conx.Execute("CREATE TABLE INA_QUOTE_REV(QUOTE_NO VARCHAR(7),REV VARCHAR(2),SEQ VARCHAR(2),LINE VARCHAR(4),ACTION VARCHAR(1),CHANGE VARCHAR(30),BEFORE VARCHAR(30),AFTER VARCHAR(30),USERID VARCHAR(8),DATE_CHG DATE,TIME_CHG CHAR(8));")
			F.Intrinsic.UI.CloseWaitDialog
'		F.Intrinsic.Control.Else
'			F.ODBC.Connection!conx.FieldExists("INA_QUOTE_REV","DATE_CHG",V.Local.bExist)
'			F.Intrinsic.Control.If(V.Local.bExist,=,False)
'				F.Intrinsic.UI.InvokeWaitDialog("Updating custom table","Quote Revision [APAC]")
'				F.ODBC.Connection!conx.Execute("alter table ina_quote_rev rename column DATE to DATE_CHG")
'				F.ODBC.Connection!conx.Execute("alter table ina_quote_rev rename column TIME to TIME_CHG")
'				F.Intrinsic.UI.CloseWaitDialog
'			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.CallSub(Deletezz)
	F.Intrinsic.Control.EndIf
	'Quote populate hook
	F.Intrinsic.Control.If(V.Caller.Hook,=,10710)
		V.Passed.000201.Set("View Rev")
	'Quote post load hook
	F.Intrinsic.Control.Elseif(V.Caller.Hook,=,10721)
		V.Local.sQuote.set(V.Passed.000003)
		F.Intrinsic.String.LPad(V.Local.sQuote,"0",7,V.Local.sQuote)
		F.Intrinsic.Control.CallSub(Addreference,"Quote",V.Local.sQuote)
	'Quote exit hook
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,10950)
		F.Intrinsic.Control.CallSub(Deletereference)
	'Quote pre-save hook
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,10922)
		F.Intrinsic.Control.CallSub(Modifyheader)
	'Quote line pre-save hook
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,10531)
		F.Intrinsic.Control.CallSub(Addmodifyline)
	'Quote line pre-delete hook
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,10541)
		F.Intrinsic.Control.CallSub(Deleteline)
	'Clear screen Hook
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,10951)
		F.Intrinsic.Control.CallSub(Deletereference)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Only for view quote
F.Intrinsic.Control.If(V.Caller.Switches,=,"V")
	F.Intrinsic.Control.If(V.Caller.Hook,=,10710)
		V.Passed.000201.Set("View Rev")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.ODBC.Connection!conx.Close

Program.Sub.Main.End

Program.Sub.addModifyLine.Start
'Variables for setup
V.Local.sQuote.Declare(String)
V.Local.sQuoteLine.Declare(String)
V.Local.sRecordNo.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.iSeq.Declare(Long)
V.Local.iSeq.Set(0)
V.Local.sCurTime.Declare(String)

V.Local.i1.Declare(Long)
V.Local.sQuery.Declare(String)

'Variables to identify changes
V.Local.sApplyDisc.Declare(String)
V.Local.iModified.Declare(Long)
V.Local.iModified.Set(0)
V.Local.sScreenVal.Declare(String)
V.Local.sPCCVal.Declare(String)
V.Local.fScreenVal.Declare(Float)
V.Local.fValChange.Declare(Float)
V.Local.dPromDate.Declare(Date)
V.Local.sPartNum.Declare(String)
V.Local.sPartRev.Declare(String)
V.Local.sPromDate.Declare(String)
V.Local.sUser.Declare
V.Local.sDate.Declare

'Reformat quote number to 7 characters
V.Local.sQuote.Set(V.Passed.000060)
F.Intrinsic.String.LPad(V.Local.sQuote,"0",7,V.Local.sQuote)

'Reformat line number to 3 characters
V.Local.sQuoteLine.Set(V.Passed.000051)
F.Intrinsic.String.LPad(V.Local.sQuoteLine,"0",3,V.Local.sQuoteLine)
F.Intrinsic.String.Concat(V.Local.sQuoteLine,V.Passed.000090,V.Local.sRecordNo)

'Get rev number from the reference row in the table
F.Intrinsic.String.Concat("SELECT REV FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	F.ODBC.conx!rstQTE.Close
	F.Intrinsic.Control.CallSub(Addreference,"Quote",V.Local.sQuote)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
	V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.Else
	V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.EndIf

'Check existing sequence for the rev number
F.Intrinsic.String.Concat("SELECT TOP 1 SEQ FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND SEQ <> '00' AND REV = '",V.Local.sRev.Trim,"' ORDER BY SEQ DESC",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	V.Local.iSeq.Set(1)
	V.Local.sSeq.Set("01")
F.Intrinsic.Control.Else
	V.Local.sSeq.Set(V.ODBC.conx!rstQTE.FieldValTrim!SEQ)
	F.Intrinsic.Math.ConvertToLong(V.Local.sSeq,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

'Check for selected apply discount button
F.Intrinsic.Control.If(V.Passed.000113,=,"Y")
	V.Local.sApplyDisc.Set("Y")
F.Intrinsic.Control.ElseIf(V.Passed.000114,=,"N")
	V.Local.sApplyDisc.Set("N")
F.Intrinsic.Control.Elseif(V.Passed.000115,=,"D")
	V.Local.sApplyDisc.Set("D")
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Concat("SELECT * FROM V_QUOTE_LINES WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND RECORD_NO = '",V.Local.sRecordNo.Trim,"' AND RECORD_TYPE = 'L'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
'Create datatable to store changes
F.Data.DataTable.Create("dtChange",True)
F.Data.DataTable.AddColumn("dtChange","Seq","String")
F.Data.DataTable.AddColumn("dtChange","Change","String")
F.Data.DataTable.AddColumn("dtChange","Before","String")
F.Data.DataTable.AddColumn("dtChange","After","String")
V.Local.sUser.Set(V.Caller.User)
F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)
'Check if it is a new added line
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	'Show added part number
	F.Intrinsic.String.Trim(V.Passed.000052,V.Local.sPartNum)
	F.Intrinsic.String.Trim(V.Passed.000053,V.Local.sPartRev)
	F.Intrinsic.String.GSSPartString(V.Local.sPartNum,V.Local.sPartRev,V.Local.sPartNum)
	F.Intrinsic.String.LPad(V.Local.iSeq,"0",2,V.Local.sSeq)
	F.Intrinsic.String.Build("insert into ina_quote_rev(quote_no, rev, seq, line, action, change, after, userid, date_chg, time_chg) values('{0}','{1}','{2}','{3}','A','{4}','{5}','{6}','{7}','{8}');",V.Local.sQuote,V.Local.sRev,V.Local.sSeq,V.Local.sRecordNo,"Part Number",V.Local.sPartNum.Trim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
	F.ODBC.Connection!conx.Execute(V.Local.sQuery)
F.Intrinsic.Control.Else
	'Check if quote quantity changes
	V.Local.fScreenVal.Set(V.Passed.000007)
	F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.ODBC.conx!rstQTE.FieldValFloat!QTY_QUOTED,V.Local.fValChange)
	F.Intrinsic.Control.If(V.Local.fValChange,<>,0.0)
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!QTY_QUOTED,"#,0.0000",V.Local.sPCCVal)
		F.Intrinsic.String.Format(V.Local.fScreenVal,"#,0.0000",V.Local.sScreenVal)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Quantity","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if price changes
	V.Local.fScreenVal.Set(V.Passed.000009)
	F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.ODBC.conx!rstQTE.FieldValFloat!PRICE_QUOTE,V.Local.fValChange)
	F.Intrinsic.Control.If(V.Local.fValChange,<>,0)
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!PRICE_QUOTE,"#,0.0000",V.Local.sPCCVal)
		F.Intrinsic.String.Format(V.Local.fScreenVal,"#,0.0000",V.Local.sScreenVal)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Unit Price","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if discount percet changes
	V.Local.fScreenVal.Set(V.Passed.000005)
	F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.ODBC.conx!rstQTE.FieldValFloat!DISCOUNT,V.Local.fValChange)
	F.Intrinsic.Control.If(V.Local.fValChange,<>,0.0)
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!DISCOUNT,"#,0.0000",V.Local.sPCCVal)
		F.Intrinsic.String.Format(V.Local.fScreenVal,"#,0.0000",V.Local.sScreenVal)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Discount Percent","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if discount applied flag is changed
	F.Intrinsic.Control.If(V.Local.sApplyDisc,<>,V.ODBC.conx!rstQTE.FieldValTrim!FLAG_ALWAYS_DISCOUNT)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Discount Applied","sPCCVal",V.ODBC.conx!rstQTE.FieldValTrim!FLAG_ALWAYS_DISCOUNT,"sScreenVal",V.Local.sApplyDisc)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if ship to ID is changed
	V.Local.sScreenVal.Set(V.Passed.000088)
	V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!QUOTE_SHIP_ID)
	F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Ship to ID","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if part changes
	F.Intrinsic.String.Trim(V.Passed.000052,V.Local.sPartNum)
	F.Intrinsic.String.Trim(V.Passed.000053,V.Local.sPartRev)
	F.Intrinsic.String.RPad(V.Local.sPartNum," ",17,V.Local.sPartNum)
	F.Intrinsic.String.Concat(V.Local.sPartNum,V.Local.sPartRev,V.Local.sScreenVal)
	V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!PART)
	F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Part Number","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if item promised date is changed
	V.Local.sScreenVal.Set(V.Passed.000011)
	F.Intrinsic.Control.If(V.Caller.GSSVersion,<=,"2016.1")
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldVal!ITEM_PROMISE_DT,"MMDDYY",V.Local.sPCCVal)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldVal!ITEM_PROMISE_DT,"YYYYMMDD",V.Local.sPCCVal)
	F.Intrinsic.Control.EndIf
'	V.Local.sScreenVal.Set(V.Passed.000011)
'	V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!ITEM_PROMISE_DT)
	F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
		V.Local.sPromDate.Set(V.Passed.000011)
		F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"000000")
			V.Local.sScreenVal.Set("")
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Caller.GSSVersion,<=,"2016.1")
				F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYY",V.Local.dPromDate)
			F.Intrinsic.Control.Else
				F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"YYYYMMDD",V.Local.dPromDate)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Format(V.Local.dPromDate,"DD/MM/YYYY",V.Local.sScreenVal)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldVal!ITEM_PROMISE_DT,"YYYYMMDD",V.Local.sPCCVal)
'		V.Local.sPromDate.Set(V.ODBC.conx!rstQTE.FieldValTrim!ITEM_PROMISE_DT)
		F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"19000101")
			V.Local.sPCCVal.Set("")
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldVal!ITEM_PROMISE_DT,"DD/MM/YYYY",V.Local.sPCCVal)
'			F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYY",V.Local.dPromDate)
'			F.Intrinsic.String.Format(V.Local.dPromDate,"DD/MM/YYYY",V.Local.sPCCVal)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Promised Date","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'If there are changes
	F.Intrinsic.Control.If(V.DataTable.dtChange.RowCount,>,0)
		F.Intrinsic.Control.For(V.Local.i1,0,V.DataTable.dtChange.RowCount--,1)
			F.Intrinsic.String.Build("insert into ina_quote_rev(quote_no, rev, seq, line, action, change, before, after, userid, date_chg, time_chg) values('{0}','{1}','{2}','{3}','M','{4}','{5}','{6}','{7}','{8}','{9}');",V.Local.sQuote,V.Local.sRev,V.DataTable.dtChange(V.Local.i1).Seq!FieldValTrim,V.Local.sRecordNo,V.DataTable.dtChange(V.Local.i1).Change!FieldValTrim,V.DataTable.dtChange(V.Local.i1).Before!FieldValTrim,V.DataTable.dtChange(V.Local.i1).After!FieldValTrim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
			F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.Control.Next(V.Local.i1)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Data.DataTable.Close("dtChange")

Program.Sub.addModifyLine.End

Program.Sub.addReference.Start
'This subprogram creates a reference row entry in INA_QUOTE_REV table to state which quote and rev number it is currently at. The reference row is signified by '00' on SEQ.
V.Local.sQuote.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sPrevRev.Declare(String)
V.Local.iRevCount.Declare(Long)
V.Local.sQuery.Declare(String)
V.Local.sMessage.Declare(String)
V.Local.sCurTime.Declare(String)
V.Local.sUser.Declare
V.Local.sDate.Declare

F.Intrinsic.Control.CallSub(Deletereference)

'Reformat quote number to 7 characters
'V.Local.sQuote.set(V.Passed.000003)
'F.Intrinsic.String.LPad(V.Local.sQuote,"0",7,V.Local.sQuote)
V.Local.sQuote.set(V.Args.Quote)

'Get the previous rev for the selected quote
F.Intrinsic.String.Concat("SELECT REV FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,False)
	V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldValTrim!REV)
	F.Intrinsic.Math.ConvertToLong(V.Local.sRev,V.Local.iRevCount)
	F.Intrinsic.Math.Sub(V.Local.iRevCount,1,V.Local.iRevCount)
	F.Intrinsic.String.LPad(V.Local.iRevCount,"0",2,V.Local.sPrevRev)
	F.Intrinsic.String.Concat("SELECT USERID FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND REV = '",V.Local.sPrevRev.Trim,"' AND SEQ = 'ZZ'",V.Local.sQuery)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTEOLD",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.conx!rstQTEOLD.EOF,=,False)
		F.Intrinsic.String.Concat("This quote is currently being opened by ",V.ODBC.conx!rstQTEOLD.FieldValTrim!USERID,V.Local.sMessage)
		F.Intrinsic.UI.Msgbox(V.Local.sMessage,"NOTIFICATION")
		F.ODBC.conx!rstQTEOLD.Close
		F.ODBC.conx!rstQTE.Close
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		F.Intrinsic.Math.Add(V.Local.iRevCount,2,V.Local.iRevCount)
		F.Intrinsic.String.LPad(V.Local.iRevCount,"0",2,V.Local.sRev)
		F.ODBC.conx!rstQTEOLD.Close
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	V.Local.iRevCount.Set(1)
	V.Local.sRev.Set("01")
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.String.Concat("SELECT * FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND REV = '",V.Local.sRev.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRW("rstQTE",V.Local.sQuery)
V.Local.sUser.Set(V.Caller.User)
F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	'Insert a reference row in the table that defines which rev number it is currently at
	F.Intrinsic.Control.If(V.Local.iRevCount,=,1)
		'First revision
		F.Intrinsic.String.Build("insert into INA_QUOTE_REV(quote_no, rev, seq, userid, date_chg, time_chg) values('{0}','{1}','00','{2}','{3}','{4}');",V.Local.sQuote,V.Local.sRev,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.String.Build("insert into INA_QUOTE_REV(quote_no, rev, seq, userid, date_chg, time_chg) values('{0}','00','ZZ','{1}','{2}','{3}');",V.Local.sQuote,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.Else
		'Other than the first revision, change the old reference sequence to ZZ and create a new one
		F.Intrinsic.Math.Sub(V.Local.iRevCount,1,V.Local.iRevCount)
		F.Intrinsic.String.LPad(V.Local.iRevCount,"0",2,V.Local.sPrevRev)
		F.Intrinsic.String.Build("update ina_quote_rev set seq = 'ZZ' where quote_no = '{0}' and rev = '{1}' and seq = '00'",V.Local.sQuote.Trim,V.Local.sPrevRev.Trim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.String.Build("insert into INA_QUOTE_REV(quote_no, rev, seq, userid, date_chg, time_chg) values('{0}','{1}','00','{2}','{3}','{4}');",V.Local.sQuote,V.Local.sRev,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

Program.Sub.addReference.End

Program.Sub.deleteLine.Start
V.Local.sQuote.Declare(String)
V.Local.sQuoteLine.Declare(String)
V.Local.sRecordNo.Declare(String)
V.Local.sQuery.Declare(String)
V.Local.SQLquery.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.iSeq.Declare(Long)
V.Local.iSeq.Set(0)
V.Local.sCurTime.Declare(String)
V.Local.sDate.Declare
V.Local.sUser.Declare

V.Local.sPartNum.Declare(String)
V.Local.sPartRev.Declare(String)

'Reformat quote number to 7 characters
V.Local.sQuote.Set(V.Passed.000060)
F.Intrinsic.String.LPad(V.Local.sQuote,"0",7,V.Local.sQuote)

'Reformat line number to 3 characters
V.Local.sQuoteLine.Set(V.Passed.000051)
F.Intrinsic.String.LPad(V.Local.sQuoteLine,"0",3,V.Local.sQuoteLine)
F.Intrinsic.String.Concat(V.Local.sQuoteLine,V.Passed.000090,V.Local.sRecordNo)

'Get rev number from the reference row in the table
F.Intrinsic.String.Concat("SELECT * FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	F.ODBC.conx!rstQTE.Close
	F.Intrinsic.Control.CallSub(Addreference,"Quote",V.Local.sQuote)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
	V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.Else
	V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.EndIf

'Check existing sequence for the rev number
F.Intrinsic.String.Concat("SELECT TOP 1 SEQ FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND SEQ <> '00' AND REV = '",V.Local.sRev.Trim,"' ORDER BY SEQ DESC",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	V.Local.iSeq.Set(1)
	V.Local.sSeq.Set("01")
F.Intrinsic.Control.Else
	V.Local.sSeq.Set(V.ODBC.conx!rstQTE.FieldValTrim!SEQ)
	F.Intrinsic.Math.ConvertToLong(V.Local.sSeq,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.String.Concat("SELECT QUOTE_NO FROM QUOTE_LINES WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND RECORD_NO = '",V.Local.sRecordNo.Trim,"' AND RECORD_TYPE = 'L'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,False)
	F.Intrinsic.String.LPad(V.Local.iSeq,"0",2,V.Local.sSeq)
	'Show deleted part number
	F.Intrinsic.String.Trim(V.Passed.000052,V.Local.sPartNum)
	F.Intrinsic.String.Trim(V.Passed.000053,V.Local.sPartRev)
	F.Intrinsic.String.GSSPartString(V.Local.sPartNum,V.Local.sPartRev,V.Local.sPartNum)
	F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
	F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)
	F.Intrinsic.String.Build("insert into ina_quote_rev(quote_no, rev, seq, line, action, change, before, userid, date_chg, time_chg) values('{0}','{1}','{2}','{3}','D','{4}','{5}','{6}','{7}','{8}');",V.Local.sQuote.Trim,V.Local.sRev.Trim,V.Local.sSeq.Trim,V.Local.sRecordNo.Trim,V.Passed.000168,V.Local.sPartNum.Trim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
	F.ODBC.Connection!conx.Execute(V.Local.sQuery)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

Program.Sub.deleteLine.End

Program.Sub.modifyHeader.Start
V.Local.sQuote.Declare(String)
V.Local.i1.Declare(Long)
V.Local.sQuery.Declare(String)
V.Local.SQLquery.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.iSeq.Declare(Long)
V.Local.iSeq.Set(0)
V.Local.sCurTime.Declare(String)
V.Local.sDate.Declare
V.Local.sUser.Declare

'Variables for changes identification
V.Local.iModified.Declare(Long)
V.Local.iModified.Set(0)
V.Local.sScreenVal.Declare(String)
V.Local.sPCCVal.Declare(String)
V.Local.fScreenVal.Declare(Float)
V.Local.fValChange.Declare(Float)
V.Local.sPromDate.Declare(String)
V.Local.dPromDate.Declare(String)

'Reformat quote number to 7 characters
V.Local.sQuote.Set(V.Passed.000003)
F.Intrinsic.String.LPad(V.Local.sQuote,"0",7,V.Local.sQuote)

'Get rev number from the reference row in the table
F.Intrinsic.String.Concat("SELECT QUOTE_NO, REV FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	F.ODBC.conx!rstQTE.Close
	F.Intrinsic.Control.CallSub(Addreference,"Quote",V.Local.sQuote)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
	V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.Else
	V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.EndIf

'Check existing sequence for the rev number
F.Intrinsic.String.Concat("SELECT TOP 1 SEQ FROM INA_QUOTE_REV WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND SEQ <> '00' AND REV = '",V.Local.sRev.Trim,"' ORDER BY SEQ DESC",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	V.Local.iSeq.Set(1)
	V.Local.sSeq.Set("01")
F.Intrinsic.Control.Else
	V.Local.sSeq.Set(V.ODBC.conx!rstQTE.FieldValTrim!SEQ)
	F.Intrinsic.Math.ConvertToLong(V.Local.sSeq,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.String.Concat("SELECT FLAG_ALWAYS_DISCOUNT,QUOTE_DISCOUNT,TERMS,DATE_DUE FROM QUOTE_HEADER WHERE QUOTE_NO = '",V.Local.sQuote.Trim,"' AND RECORD_TYPE = 'A'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)

'Create datatable to store changes
F.Data.DataTable.Create("dtChange",True)
F.Data.DataTable.AddColumn("dtChange","Seq","String")
F.Data.DataTable.AddColumn("dtChange","Change","String")
F.Data.DataTable.AddColumn("dtChange","Before","String")
F.Data.DataTable.AddColumn("dtChange","After","String")
'Check if apply discount to all lines is checked
V.Local.sScreenVal.Set(V.Passed.000047)
F.Intrinsic.Control.If(V.Local.sScreenVal,<>,V.ODBC.conx!rstQTE.FieldValTrim!FLAG_ALWAYS_DISCOUNT)
	F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Apply Discount to All","sPCCVal",V.ODBC.conx!rstQTE.FieldValTrim!FLAG_ALWAYS_DISCOUNT,"sScreenVal",V.Local.sScreenVal.Trim)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
F.Intrinsic.Control.EndIf
'Check if discount percet changes
V.Local.fScreenVal.Set(V.Passed.000068)
F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.ODBC.conx!rstQTE.FieldValFloat!QUOTE_DISCOUNT,V.Local.fValChange)
F.Intrinsic.Control.If(V.Local.fValChange,<>,0.0)
	F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!QUOTE_DISCOUNT,"#,0.0000",V.Local.sPCCVal)
	F.Intrinsic.String.Format(V.Local.fScreenVal,"#,0.0000",V.Local.sScreenVal)
	F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Discount Percent","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
F.Intrinsic.Control.EndIf
'Check if terms changes
V.Local.sScreenVal.Set(V.Passed.000029)
V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!TERMS)
F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
	F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Terms","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
F.Intrinsic.Control.EndIf
'Check if due date changes
V.Local.sScreenVal.Set(V.Passed.000024)
V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!DATE_DUE)
F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
	V.Local.sPromDate.Set(V.Passed.000024)
	F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"000000")
		V.Local.sScreenVal.Set("")
	F.Intrinsic.Control.Else
		F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYY",V.Local.dPromDate)
		F.Intrinsic.String.Format(V.Local.dPromDate,"DD/MM/YYYY",V.Local.sScreenVal)
	F.Intrinsic.Control.EndIf
	
	V.Local.sPromDate.Set(V.ODBC.conx!rstQTE.FieldValTrim!DATE_DUE)
	F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"000000")
		V.Local.sPCCVal.Set("")
	F.Intrinsic.Control.Else
		F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYY",V.Local.dPromDate)
		F.Intrinsic.String.Format(V.Local.dPromDate,"DD/MM/YYYY",V.Local.sPCCVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Due Date","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
F.Intrinsic.Control.EndIf

'If there are changes, store to INA_QUOTE_REV
F.Intrinsic.Control.If(V.DataTable.dtChange.RowCount,>,0)
	F.Intrinsic.Control.For(V.Local.i1,0,V.DataTable.dtChange.RowCount--,1)
		V.Local.sUser.Set(V.Caller.User)
		F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
		F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)
		F.Intrinsic.String.Build("insert into ina_quote_rev(quote_no, rev, seq, line, action, change, before, after, userid, date_chg, time_chg) values('{0}','{1}','{2}','HDR','M','{3}','{4}','{5}','{6}','{7}','{8}');",V.Local.sQuote,V.Local.sRev,V.DataTable.dtChange(V.Local.i1).Seq!FieldValTrim,V.DataTable.dtChange(V.Local.i1).Change!FieldValTrim,V.DataTable.dtChange(V.Local.i1).Before!FieldValTrim,V.DataTable.dtChange(V.Local.i1).After!FieldValTrim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.Next(V.Local.i1)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close
F.Data.DataTable.Close("dtChange")
Program.Sub.modifyHeader.End

Program.Sub.deleteReference.Start
V.Local.sQuote.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sPrevRev.Declare(String)
V.Local.iRev.Declare(Long)
V.Local.sQuery.Declare(String)
V.Local.sUser.Declare(String)
V.Local.i1.Declare
V.Local.sFilter.Declare
V.Local.sRet.Declare

F.Intrinsic.String.Trim(V.Caller.User,V.Local.sUser)

'Delete the reference row from the table if there is no change found
'First get the reference row to identify the rev number
F.Intrinsic.String.Concat("SELECT * FROM INA_QUOTE_REV WHERE SEQ = 'ZZ' AND USERID = '",V.Local.sUser.Trim,"'",V.Local.sQuery)
F.Data.DataTable.CreateFromSQL("dtQte","conx",V.Local.sQuery)
F.Intrinsic.Control.For(V.Local.i1,0,V.DataTable.dtQte.RowCount--,1)
	F.Intrinsic.Math.ConvertToLong(V.DataTable.dtQte(V.Local.i1).Rev!FieldVal,V.Local.iRev)
	F.Intrinsic.Math.Add(V.Local.iRev,1,V.Local.iRev)
	F.Intrinsic.String.LPad(V.Local.iRev,"0",2,V.Local.sRev)
	F.Intrinsic.String.Build("select quote_no, rev, seq from ina_quote_rev where quote_no = '{0}' and rev = '{1}' and seq = '01'",V.DataTable.dtQte(V.Local.i1).QUOTE_NO!FieldValTrim,V.Local.sRev.Trim,V.Local.sQuery)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
		F.Intrinsic.Control.If(V.Local.iRev,=,1)
			F.Intrinsic.String.Build("delete from ina_quote_rev where quote_no = '{0}' and rev = '{1}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).QUOTE_NO!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("update ina_quote_rev set seq = '00' where quote_no = '{0}' and rev = '{1}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).QUOTE_NO!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.Intrinsic.Control.EndIf
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.String.Build("delete from ina_quote_rev where quote_no = '{0}' and rev = '{1}' and seq = '00'",V.DataTable.dtQte(V.Local.i1).QUOTE_NO!FieldValTrim,V.Local.sRev.Trim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("delete from ina_quote_rev where quote_no = '{0}' and rev = '{1}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).QUOTE_NO!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.Next(V.Local.i1)
F.Data.DataTable.Close("dtQte")

Program.Sub.deleteReference.End

Program.Sub.deleteZZ.Start
V.Local.sQuery.Declare(String)
V.Local.sUser.Declare

'Delete if there is any existing ZZ sequence from the current user. It is to prevent any ZZ sequence to show up if there is a system glitch.
V.Local.sUser.Set(V.Caller.User)
F.Intrinsic.String.Build("delete from ina_quote_rev where seq = 'ZZ' and userid = '{0}'",V.Local.sUser.Trim,V.Local.sQuery)
F.ODBC.Connection!conx.Execute(V.Local.sQuery)

Program.Sub.deleteZZ.End

Program.Sub.storeChanges.Start
V.Local.sSeq.Declare(String)

F.Intrinsic.String.LPad(V.Args.iSeq,"0",2,V.Local.sSeq)
F.Data.DataTable.AddRow("dtChange","Seq",V.Local.sSeq,"Change",V.Args.sChange,"Before",V.Args.sPCCVal,"After",V.Args.sScreenVal)

Program.Sub.storeChanges.End

Program.Sub.Comments.Start
${$0$}$INA_QUOTE_REV$}$MHERTANTO$}$14/6/2015$}$False
${$1$}$$}$$}$6$}$10541$}$$}$14/6/2015 12:46:57 AM$}$Quote Line Pre-Delete Hook
${$1$}$$}$$}$5$}$10531$}$$}$14/6/2015 12:46:41 AM$}$Quote Line Pre-Save Hook
${$1$}$$}$$}$4$}$10922$}$$}$14/6/2015 12:46:27 AM$}$Quote Pre-Save Hook
${$1$}$$}$$}$3$}$10950$}$$}$14/6/2015 12:46:14 AM$}$Quote Exit Hook
${$1$}$$}$$}$2$}$10721$}$$}$14/6/2015 12:46:00 AM$}$Quote Post-Load Hook
${$1$}$$}$$}$1$}$10710$}$$}$14/6/2015 12:45:36 AM$}$Quote Populate Hook
${$1$}$$}$$}$0$}$10700$}$$}$14/6/2015 12:41:07 AM$}$Quote Entry Hook
${$3$}$0$}$$}$-1$}$-1$}$$}$1/1/1900$}$This GAB script tracks changes made to a quote. The changes are stored into a new table called INA_QUOTE_REV.
${$4$}$0$}$$}$11$}$-1$}$MHERTANTO$}$28/1/2016 12:49:01 AM$}$Major rewrite on the whole script (following GAB variable naming conventions and simplifications)
${$4$}$0$}$$}$10$}$-1$}$MHERTANTO$}$22/7/2015 5:31:48 PM$}$Add an IF statement on the first query to INA_QUOTE_REV in addModifyLine and modifyHeader subroutines in order to prevent EOF when opening quote that is just created from estimating router. Before proceeding in both subroutines, if EOF then create a reference through addReference subroutine.
${$4$}$0$}$$}$9$}$-1$}$SUPERVSR$}$14/6/2015 12:44:21 AM$}$Add a new subroutine called deleteZZ, it is placed on entry hook to clear out any ZZ sequences generated by the user from previous opening of quote screen
${$4$}$0$}$$}$8$}$-1$}$SUPERVSR$}$24/5/2015 12:44:10 AM$}$Part number is shown in adding or deleting a line
${$4$}$0$}$$}$7$}$-1$}$SUPERVSR$}$24/5/2015 12:43:54 AM$}$In addReference, quote rev that is currently opened by a user has an extra ZZ seq
${$4$}$0$}$$}$6$}$-1$}$SUPERVSR$}$24/5/2015 12:43:38 AM$}$In addReference, a check point is created to detect if the selected rev is opened by another user
${$4$}$0$}$$}$5$}$-1$}$SUPERVSR$}$24/5/2015 12:43:20 AM$}$In deleteReference the deletion is modified to be based on seq ZZ and USERID. Also add the deletion of an empty rev 01
${$4$}$0$}$$}$4$}$-1$}$SUPERVSR$}$24/5/2015 12:43:07 AM$}$In addReference when the rev is greater than 01, the previous rev seq is changed to ZZ. Previosly the previous rev was deleted
${$4$}$0$}$$}$3$}$-1$}$SUPERVSR$}$20/5/2015 12:42:48 AM$}$Add a zero before decimal separators on discount percent
${$4$}$0$}$$}$2$}$-1$}$SUPERVSR$}$18/5/2015 12:42:32 AM$}$deleteReference has been modified to allow deletion of all quote reference rows which have no changes made
${$4$}$0$}$$}$1$}$-1$}$SUPERVSR$}$18/5/2015 12:42:17 AM$}$Adding part changes tracking in addModifyLine
${$4$}$0$}$$}$0$}$-1$}$SUPERVSR$}$18/5/2015 12:41:56 AM$}$Adding a new hook (10710) to change the label in Script 1 button
${$5$}$2.0.0.0$}$2
${$6$}$tdjohan$}$20221115162002557$}$8rAQhOSvlohpQhMDm1j544LwmwXnRbkhtIRgsTU7Gt1kGXpxQufdTqitRvq7KR0nAcWFTrjUndo=
Program.Sub.Comments.End

